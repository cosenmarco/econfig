{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://https://github.com/cosenmarco/econfig/server/src/repository/modelSchema-00.01.json",
    "title": "Model",
    "description": "A model describing the configuration of several components",
    "type": "object",
    "properties": {
        "version": {
            "description": "The version of the schema",
            "type": "number"
        },
        "components": {
            "description": "The components managed by this server",
            "type": "array",
            "minItems": 1,
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The identifier for the component",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description for the component",
                        "type": "string"
                    },
                    "dimensions": {
                        "description": "The dimensions across which the configuration values could span",
                        "type": "array",
                        "items": { "$ref": "#dimension" }
                    },
                    "keys": {
                        "description": "The configuration keys",
                        "type": "array",
                        "items": { "$ref": "#key" }
                    }
                },
                "required": ["id"]
            }
        }
    },
    "required": ["version", "components"],


    "definitions": {
        "dimension": {
            "$id": "#dimension",
            "description": "The dimension describes a space of values which can be matched at config time or runtime to express special configuration cases",
            "type": "object",
            "properties": {
                "id": {
                    "description": "The identifier for the dimension",
                    "type": "string"
                },
                "description": {
                    "description": "The description for the dimension",
                    "type": "string"
                },
                "dynamic": {
                    "description": "Tells if the dimension is dynamic",
                    "type": "boolean"
                },
                "type": {
                    "description": "The type of values this dimension can assume",
                    "enum": ["string", "percent"]
                }
            }
        },

        "key": {
            "$id": "#key",
            "description": "The key describes a way to access a config value and to define all possible values across dimensions",
            "type": "object",
            "properties": {
                "key": {
                    "description": "The identifier for the key",
                    "type": "string"
                },
                "description": {
                    "description": "The description for the key",
                    "type": "string"
                },
                "type": {
                    "description": "The type of values this key holds",
                    "type": "string"
                },
                "values": {
                    "description": "The values associated to the key",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "value": {},
                            "dimensions": {
                                "description": "The the values various dimensions have to assume to match current entry",
                                "type": "array",
                                "items": { "$ref": "#dimensionValue" }
                            }
                        }
                    }
                }
            }
        },

        "dimensionValue": {
            "$id": "#dimensionValue",
            "description": "The key is used to access a config value at runtime and to define all possible values across dimensions at config time",
            "type": "object",
            "properties": {
                "dimension": {
                    "type": "string",
                    "description": "The id of the dimension we're referencing to"
                },
                "value": {}
            },
            "required": [ "value" ]
        }
    }
}
